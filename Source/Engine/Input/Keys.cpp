#include "Framework.h"
#include "Engine/Input/Keys.h"

namespace Silent::Input
{
    std::vector<int> VALID_KEYBOARD_SCAN_CODES = 
    {
        SDL_SCANCODE_A,
        SDL_SCANCODE_B,
        SDL_SCANCODE_C,
        SDL_SCANCODE_D,
        SDL_SCANCODE_E,
        SDL_SCANCODE_F,
        SDL_SCANCODE_G,
        SDL_SCANCODE_H,
        SDL_SCANCODE_I,
        SDL_SCANCODE_J,
        SDL_SCANCODE_K,
        SDL_SCANCODE_L,
        SDL_SCANCODE_M,
        SDL_SCANCODE_N,
        SDL_SCANCODE_O,
        SDL_SCANCODE_P,
        SDL_SCANCODE_Q,
        SDL_SCANCODE_R,
        SDL_SCANCODE_S,
        SDL_SCANCODE_T,
        SDL_SCANCODE_U,
        SDL_SCANCODE_V,
        SDL_SCANCODE_W,
        SDL_SCANCODE_X,
        SDL_SCANCODE_Y,
        SDL_SCANCODE_Z,
        SDL_SCANCODE_1,
        SDL_SCANCODE_2,
        SDL_SCANCODE_3,
        SDL_SCANCODE_4,
        SDL_SCANCODE_5,
        SDL_SCANCODE_6,
        SDL_SCANCODE_7,
        SDL_SCANCODE_8,
        SDL_SCANCODE_9,
        SDL_SCANCODE_0,
        SDL_SCANCODE_RETURN,
        SDL_SCANCODE_ESCAPE,
        SDL_SCANCODE_BACKSPACE,
        SDL_SCANCODE_TAB,
        SDL_SCANCODE_SPACE,
        SDL_SCANCODE_MINUS,
        SDL_SCANCODE_EQUALS,
        SDL_SCANCODE_LEFTBRACKET,
        SDL_SCANCODE_RIGHTBRACKET,
        SDL_SCANCODE_BACKSLASH,
        SDL_SCANCODE_SEMICOLON,
        SDL_SCANCODE_APOSTROPHE,
        SDL_SCANCODE_COMMA,
        SDL_SCANCODE_PERIOD,
        SDL_SCANCODE_SLASH,
        SDL_SCANCODE_F1,
        SDL_SCANCODE_F2,
        SDL_SCANCODE_F3,
        SDL_SCANCODE_F4,
        SDL_SCANCODE_F5,
        SDL_SCANCODE_F6,
        SDL_SCANCODE_F7,
        SDL_SCANCODE_F8,
        SDL_SCANCODE_F9,
        SDL_SCANCODE_F10,
        SDL_SCANCODE_F11,
        SDL_SCANCODE_F12,
        SDL_SCANCODE_PRINTSCREEN,
        SDL_SCANCODE_HOME,
        SDL_SCANCODE_PAGEUP,
        SDL_SCANCODE_DELETE,
        SDL_SCANCODE_END,
        SDL_SCANCODE_PAGEDOWN,
        SDL_SCANCODE_RIGHT,
        SDL_SCANCODE_LEFT,
        SDL_SCANCODE_DOWN,
        SDL_SCANCODE_UP,
        SDL_SCANCODE_KP_DIVIDE,
        SDL_SCANCODE_KP_MULTIPLY,
        SDL_SCANCODE_KP_MINUS,
        SDL_SCANCODE_KP_PLUS,
        SDL_SCANCODE_KP_ENTER,
        SDL_SCANCODE_KP_1,
        SDL_SCANCODE_KP_2,
        SDL_SCANCODE_KP_3,
        SDL_SCANCODE_KP_4,
        SDL_SCANCODE_KP_5,
        SDL_SCANCODE_KP_6,
        SDL_SCANCODE_KP_7,
        SDL_SCANCODE_KP_8,
        SDL_SCANCODE_KP_9,
        SDL_SCANCODE_KP_0,
        SDL_SCANCODE_KP_PERIOD
    };

    std::vector<int> VALID_KEYBOARD_MOD_CODES =
    {
        SDL_KMOD_CTRL,
        SDL_KMOD_SHIFT,
        SDL_KMOD_ALT
    };

    std::vector<int> VALID_MOUSE_BUT_CODES =
    {
        SDL_BUTTON_LEFT,
        SDL_BUTTON_MIDDLE,
        SDL_BUTTON_RIGHT
    };

    static const auto KEY_NAME_MAP = std::unordered_map<KeyId, std::string>
    {
        { KeyId::None,           "None" },
        { KeyId::A,              "A" },
        { KeyId::B,              "B" },
        { KeyId::C,              "C" },
        { KeyId::D,              "D" },
        { KeyId::E,              "E" },
        { KeyId::F,              "F" },
        { KeyId::G,              "G" },
        { KeyId::H,              "H" },
        { KeyId::I,              "I" },
        { KeyId::J,              "J" },
        { KeyId::K,              "K" },
        { KeyId::L,              "L" },
        { KeyId::M,              "M" },
        { KeyId::N,              "N" },
        { KeyId::O,              "O" },
        { KeyId::P,              "P" },
        { KeyId::Q,              "Q" },
        { KeyId::R,              "R" },
        { KeyId::S,              "S" },
        { KeyId::T,              "T" },
        { KeyId::U,              "U" },
        { KeyId::V,              "V" },
        { KeyId::W,              "W" },
        { KeyId::X,              "X" },
        { KeyId::Y,              "Y" },
        { KeyId::Z,              "Z" },
        { KeyId::Num1,           "1" },
        { KeyId::Num2,           "2" },
        { KeyId::Num3,           "3" },
        { KeyId::Num4,           "4" },
        { KeyId::Num5,           "5" },
        { KeyId::Num6,           "6" },
        { KeyId::Num7,           "7" },
        { KeyId::Num8,           "8" },
        { KeyId::Num9,           "9" },
        { KeyId::Num0,           "0" },
        { KeyId::Return,         "Return" },
        { KeyId::Escape,         "Escape" },
        { KeyId::Backspace,      "Backspace" },
        { KeyId::Tab,            "Tab" },
        { KeyId::Space,          "Space" },
        { KeyId::Minus,          "Minus" },
        { KeyId::Equals,         "Equals" },
        { KeyId::BracketLeft,    "Left Bracket" },
        { KeyId::BracketRight,   "Right Bracket" },
        { KeyId::BackSlash,      "Back Slash" },
        { KeyId::Semicolon,      "Semicolon" },
        { KeyId::Apostrophe,     "Apostrophe" },
        { KeyId::Comma,          "Comma" },
        { KeyId::Period,         "Period" },
        { KeyId::Slash,          "Slash" },
        { KeyId::F1,             "F1" },
        { KeyId::F2,             "F2" },
        { KeyId::F3,             "F3" },
        { KeyId::F4,             "F4" },
        { KeyId::F5,             "F5" },
        { KeyId::F6,             "F6" },
        { KeyId::F7,             "F7" },
        { KeyId::F8,             "F8" },
        { KeyId::F9,             "F9" },
        { KeyId::F10,            "F10" },
        { KeyId::F11,            "F11" },
        { KeyId::F12,            "F12" },
        { KeyId::PrintScreen,    "PrintScreen" },
        { KeyId::Home,           "Home" },
        { KeyId::PageUp,         "Page Up" },
        { KeyId::Delete,         "Delete" },
        { KeyId::End,            "End" },
        { KeyId::PageDown,       "Page Down" },
        { KeyId::Right,          "Right" },
        { KeyId::Left,           "Left" },
        { KeyId::Down,           "Down" },
        { KeyId::Up,             "Up" },
        { KeyId::NumpadDivide,   "Numpad Divide" },
        { KeyId::NumpadMultiply, "Numpad Multiply" },
        { KeyId::NumpadMinus,    "Numpad Minus" },
        { KeyId::NumpadPlus,     "Numpad Plus" },
        { KeyId::NumpadEnter,    "Numpad Enter" },
        { KeyId::Numpad1,        "Numpad 1" },
        { KeyId::Numpad2,        "Numpad 2" },
        { KeyId::Numpad3,        "Numpad 3" },
        { KeyId::Numpad4,        "Numpad 4" },
        { KeyId::Numpad5,        "Numpad 5" },
        { KeyId::Numpad6,        "Numpad 6" },
        { KeyId::Numpad7,        "Numpad 7" },
        { KeyId::Numpad8,        "Numpad 8" },
        { KeyId::Numpad9,        "Numpad 9" },
        { KeyId::Numpad0,        "Numpad 0" },
        { KeyId::NumpadPeriod,   "Numpad Period" },
        { KeyId::Ctrl,           "Ctrl" },
        { KeyId::Shift,          "Shift" },
        { KeyId::Alt,            "Alt" },
        { KeyId::ClickLeft,      "Left Click" },
        { KeyId::ClickMiddle,    "Middle Click" },
        { KeyId::ClickRight,     "Right Click" }
    };

    const std::string& GetKeyName(KeyId keyId)
    {
        auto it = KEY_NAME_MAP.find(keyId);
        if (it != KEY_NAME_MAP.end())
        {
            const auto& [keyKeyId, name] = *it;
            return name;
        }

        return KEY_NAME_MAP.at(KeyId::None);
    }
}