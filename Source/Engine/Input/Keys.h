#pragma once

namespace Silent::Input
{
    enum class KeyId
    {
        None = NO_VALUE,

        A,
        B,
        C,
        D,
        E,
        F,
        G,
        H,
        I,
        J,
        K,
        L,
        M,
        N,
        O,
        P,
        Q,
        R,
        S,
        T,
        U,
        V,
        W,
        X,
        Y,
        Z,
        Num1,
        Num2,
        Num3,
        Num4,
        Num5,
        Num6,
        Num7,
        Num8,
        Num9,
        Num0,
        Return,
        Escape,
        Backspace,
        Tab,
        Space,
        Minus,
        Equals,
        BracketLeft,
        BracketRight,
        BackSlash,
        Semicolon,
        Apostrophe,
        Comma,
        Period,
        Slash,
        F1,
        F2,
        F3,
        F4,
        F5,
        F6,
        F7,
        F8,
        F9,
        F10,
        F11,
        F12,
        PrintScreen,
        Home,
        PageUp,
        Delete,
        End,
        PageDown,
        Right,
        Left,
        Down,
        Up,
        NumpadDivide,
        NumpadMultiply,
        NumpadMinus,
        NumpadPlus,
        NumpadEnter,
        Numpad1,
        Numpad2,
        Numpad3,
        Numpad4,
        Numpad5,
        Numpad6,
        Numpad7,
        Numpad8,
        Numpad9,
        Numpad0,
        NumpadPeriod,
        Ctrl,
        Shift,
        Alt,
        ClickLeft,
        ClickMiddle,
        ClickRight,

        Count
    };

    extern std::vector<int> VALID_KEYBOARD_SCAN_CODES;
    extern std::vector<int> VALID_KEYBOARD_MOD_CODES;
    extern std::vector<int> VALID_MOUSE_BUT_CODES;

    const std::string& GetKeyName(KeyId keyId);
}
